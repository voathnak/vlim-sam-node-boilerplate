AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'vlim-sam-node-boilerplate is Boilerplate of AWS SAM Using NodeJs 12.x

  Sample SAM Template for vlim-sam-node-boilerplate

  '
Globals:
  Function:
    Timeout: 60
  Api:
    Cors:
      AllowMethods: '''GET,POST,OPTIONS'''
      AllowHeaders: '''content-type, Authorization'''
      AllowOrigin: '''*'''
      AllowCredentials: '''*'''
Parameters:
  DeploymentS3BucketName:
    Type: String
    Description: The name of the S3 bucket in which the Swagger specification is stored
  StageName:
    Type: String
    Description: The name of the stage, e.g. "dev", "preprod", "prod"
    Default: devii
  AppName:
    Type: String
    Description: The name of the APP
    Default: vlim-sam-node-boilerplate
  TodoTableName:
    Type: String
    Default: TodoTable
    Description: (Required) The name of the new DynamoDB table you want to create
      and save to. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: Required parameter. Must be characters only. No numbers
      allowed.
  UserTableName:
    Type: String
    Default: UserTable
    Description: (Required) The name of the new DynamoDB table you want to create
      and save to. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z]+$
    ConstraintDescription: Required parameter. Must be characters only. No numbers
      allowed.
Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub: ${AppName}-${StageName}-api-gateway
      MethodSettings:
      - LoggingLevel: INFO
        ResourcePath: /*
        HttpMethod: '*'
      StageName:
        Ref: StageName
  createTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AppName}-${StageName}-createTodo
      CodeUri: s3://vlim-sam-node-boilerplate-devii-bucket/242dc63027ba389e514c3c33417ce137
      Handler: create.lambda_handler
      Runtime: nodejs12.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Fn::Sub: ${AppName}-${StageName}-${TodoTableName}
      Environment:
        Variables:
          DYNAMODB_TODO_TABLE:
            Fn::Sub: ${AppName}-${StageName}-${TodoTableName}
      Events:
        createTodo:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /todos
            Method: post
      Layers:
      - Ref: NodeDependencies
  listTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AppName}-${StageName}-listTodo
      CodeUri: s3://vlim-sam-node-boilerplate-devii-bucket/242dc63027ba389e514c3c33417ce137
      Handler: list.getAllTodosHandler
      Runtime: nodejs12.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Fn::Sub: ${AppName}-${StageName}-${TodoTableName}
      Environment:
        Variables:
          DYNAMODB_TODO_TABLE:
            Fn::Sub: ${AppName}-${StageName}-${TodoTableName}
      Events:
        listTodo:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /todos
            Method: get
      Layers:
      - Ref: NodeDependencies
  NodeDependencies:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: s3://vlim-sam-node-boilerplate-devii-bucket/fb037f81c014d0de057e1251e8546b15
      CompatibleRuntimes:
      - nodejs12.x
  TodosDynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${AppName}-${StageName}-${TodoTableName}
      AttributeDefinitions:
      - AttributeName: itemId
        AttributeType: S
      KeySchema:
      - AttributeName: itemId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
Outputs:
  ApiURL:
    Description: API URL
    Value:
      Fn::Sub: https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/
